POST http://localhost:8080/api/register
Content-Type: application/json

{
  "id": 102,
  "username": "wangbaoqiang",
  "password": "111111",
  "power": "user"
}

###
POST http://localhost:8080/api/login
Content-Type: application/json

{
  "username": "wang",
  "password": "11154144"
}

###
POST http://localhost:8080/api/Admin/Adjust
Content-Type: application/json

{
  "id": 101
}


###
POST http://localhost:8080/api/Admin/Update1
Content-Type: application/json

{
  "id":102,
  "detail": "mamhuhu"
}


###
POST http://localhost:8080/api/Admin/UpdateUserPower
Content-Type: application/json

{
  "id":102,
  "power": "user"
}


###
POST http://localhost:8080/api/Admin/AddTeacher
Content-Type: application/json

{
  "name": "wangbaoqiang",
  "user":{
  "id": 102
}

}


###
POST http://localhost:8080/api/Admin/createMission
Content-Type: application/json

{
  "name": "liaoaoa",
  "missionDetail": "saodi"
}


###
POST http://localhost:8080/api/Admin/createMission
Content-Type: application/json

{
  "name": "niubi",
  "missionDetail": "caonima",
  "missionState": "open"
}


###
POST http://localhost:8080/api/Admin/closeMission
Content-Type: application/json

{
  "name": "aoaossss"

}


###
POST http://localhost:8080/api/Admin/updateMission
Content-Type: application/json

{
  "name": "niubi",
  "missionDetail": "huijiachifan"

}



###
POST http://localhost:8080/api/Admin/createMissionTeacher
Content-Type: application/json

{
  "mission": {
    "name": "niubi"
  },
  "teacher": {
    "name": "wangbaoqiang"
  }
}



###
POST http://localhost:8080/api/User/getMission
Content-Type: application/json

{
  "name": "guo"


}



###
POST http://localhost:8080/api/User/writeMessage
Content-Type: application/json

{
  "teacher": {
    "name":"wang"
  },
  "mission": {
    "name": "niubi"
  },
  "message": "wozuowanle"
}



###
POST http://localhost:8080/api/User/seeMission
Content-Type: application/json

{
  "name": "niubi"


}



###
#### For a quick start check out our HTTP Requests collection (Tools|HTTP Client|Open HTTP Requests Collection).
#
# Following HTTP Request Live Templates are available:
# * 'gtrp' and 'gtr' create a GET request with or without query parameters;
# * 'ptr' and 'ptrp' create a POST request with a simple or parameter-like body;
# * 'mptr' and 'fptr' create a POST request to submit a form with a text or file field (multipart/form-data);